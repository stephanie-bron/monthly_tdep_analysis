{
/*************** Flux scaling of the result ***********
[09:46]	<jdumm>	A: 127.71
[09:46]	<jdumm>	B: 127.71
[09:46]	<jdumm>	I: 1.
[09:46]	<jdumm>	C: 255.42

*/


/*
  // These can be set here or externally:
  char * source = "Virgo";
  //char * source = "Perseus";
  //char * source = "Ophiuchus";
  //char * source = "Coma";
  //char * source = "Centaurus";

  char * model = "I";
  //char * model = "B";
  //char * model = "C";
  //char * model = "I";
*/

  char * source;
  char * model;

  char * base = "stacking/Clusters/DataforIceCube/";
  char * filestart = "/NeuFlux";

  // filename = base + source + filestart + model;
  char filename[200];
  sprintf(filename, "%s%s%s%s", base, source, filestart, model);
  cout << "Fitting: " << filename << endl;

  ifstream in;
  in.open(filename);
  // E.g.
  //in.open("ic40_fix_llh6_Ext/Clusters/DataforIceCube/Virgo/NeuFluxA");

  Float_t Enu=0, dummy1=0, dummy2=0, totalNuFlux=0, dummy3=0, dummy4=0;
  Int_t nlines = 0;
  Double_t x[500];
  Double_t y[500];

  while (1) {
    in >> Enu >> dummy1 >> dummy2 >> totalNuFlux >> dummy3 >> dummy4;
    if (!in.good()) 
      break;
    if (nlines < 5) 
      printf("log10(Enu)=%5f, log10(NuMuFlux)=%5e\n",log10(Enu),log10(totalNuFlux/3.));
    x[nlines] = log10(Enu);
    y[nlines] = log10(totalNuFlux/3.);
    nlines++;
    if (nlines >=500) {
      cout << "NEED TO INCREASE DEFAULT ARRAY SIZE!!!\n";
    }
  }


  TGraph *gSpec = new TGraph(nlines, x, y);
  //TF1 *fFit = new TF1("fCutoff","[0]+[1]*x-pow(10,x)/pow(10,[2])*log10(exp(1))",1,11);
  //fFit->SetParameters(-10.5,-2,8.5);
  TF1 *fFit = new TF1("fBreak","(x<=[3])*([0]+[1]*x)+(x>[3])*([0]+[1]*[3]-[2]*[3]+[2]*x)",1,11);
  fFit->SetParameters(-10.5,-2,-3,8.5);
  //fBreak->FixParameter(1,-2);

  gSpec->Fit(fFit);

/*
  gSpec->SetMarkerStyle(20);
  gSpec->SetMarkerSize(0.5);
  gSpec->SetMarkerColor(kRed);
  gSpec->SetTitle("Broken Power Law Fit to Simulated Nu Spectrum");
  gSpec->GetXaxis()->SetTitle("log_{10}(E_{nu}/GeV)");
  gSpec->GetYaxis()->SetTitle("log_{10}(dN/dE)");
  gSpec->Draw("AP");

  TLegend *leg = new TLegend(0.6,0.6,0.9,0.9);
  leg->AddEntry(gSpec,"Sim","p");
  leg->AddEntry(gSpec,"Fit","l");
  leg->Draw();

  TText *txt = new TText(0.36,0.71,"~E^-2");
  txt->SetNDC(); // Draw in pad coord system
  txt->Draw();

  TText *txt2 = new TText(0.73,0.38,"~E^-3.6");
  txt2->SetNDC(); // Draw in pad coord system
  txt2->Draw();
*/

  in.close();
}
