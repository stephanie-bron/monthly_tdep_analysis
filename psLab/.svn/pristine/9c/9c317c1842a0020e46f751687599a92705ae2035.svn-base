void load_ark_IC79_IC86_2011_IC86_2012_MESE(
    I3Ark& ark
  , bool opt_UseRealData
)
{
    ark.SetName("IC79_IC86_2011_IC86_2012_MESE");
    cout << "\n-----  LOADING: " << ark.GetName() << " -----\n";

    ark.evLoader.SetBkgTree( LoadTree_simple_IC79_IC86_2011_IC86_2012_MESE_data() );
    cout << "Loaded tree" << endl;

    ark.livetime = GetValueFromTree(ark.evLoader.GetBkgTree(),"livetimeTotal");
    cout << "Livetime (Days): " << ark.livetime/86400. << "\n";

    ark.evLoader.SetBkgLoadMethod_Exact();
    if(opt_UseRealData)
    {
        ark.evLoader.SetTimeMethod_Actual("timeMJD");
        cout << "Will load  * * * * U N B L I N D E D * * * *  Base Data!\n";
    }
    else
    {
        ark.evLoader.SetTimeMethod_Scramble();  // for blindness!
        cout << "Will load scrambled times for Base Data.\n";
    }

    cout << "Configuring Source Event Sample...\n";

    ark.sourceZenWidthDeg = 0.5;
    ark.evLoader.SetSourceTree( LoadTree_simple_IC79_IC86_2011_IC86_2012_MESE_nugen_numu() );
    ark.evLoader.SetSourceZenWidthDeg(ark.sourceZenWidthDeg);

    //
    // SPECIFY CUTS
    //
    TCut mc_misrec_cut = "spaceAngleDeg < 8";
    TCut IC86_Cut = "reco_Zenith_rad*TMath::RadToDeg() < 85.";
    TCut DeltaAngle = "DelAngle < pow(10,1.62)";
    TCut EnergyStartingCut = "millipede_starting > -81.*log10(reco_Energy)+426.";
    ark.evLoader.AddCut(IC86_Cut && DeltaAngle && EnergyStartingCut);

    TString recoZenRadName = "reco_Zenith_rad"; // needed for eProb below
    ark.evLoader.SetName_recoZenith_rad(recoZenRadName);
    ark.evLoader.SetName_recoAzimuth_rad("reco_Azimuth_rad");
    ark.evLoader.SetName_sigmaDeg("corrected_reco_Sigma_deg");
    ark.evLoader.SetName_runID("runID");
    ark.evLoader.SetName_eventID("eventID");

    TString energyVar = "log10(reco_Energy)";
    ark.evLoader.SetName_energyValue(energyVar);

    //
    // LOAD EVENTS
    //
    ark.evLoader.SetMonitor(true);

    cout << "Loading Background Events: " << ark.evLoader.GetBkgTree()->GetTitle() << endl;
    cout << "Using cut: " << ark.evLoader.GetCuts().GetTitle() << endl;
    ark.evLoader.LoadBkgEvents(ark.baseEvents);

    ark.evLoader.AddCut(mc_misrec_cut);
    cout << "Loading Simulation Events: " << ark.evLoader.GetSourceTree()->GetTitle() << endl;
    cout << "Using cut: " << ark.evLoader.GetCuts().GetTitle() << endl;
    ark.evLoader.InstallSourceEvents();

    // Define energy PDF zenith bin edges.
    vector<double> zenMinDegVect;
    zenMinDegVect.push_back(0.0);
    zenMinDegVect.push_back(86.0);
    zenMinDegVect.push_back(130.0);
    zenMinDegVect.push_back(180.00);
    ark.eProbZenDegVect = zenMinDegVect;

    // Define background PDF zenith binning with 45 bins.
    ark.decBkgProb.Initialize(45, 1);
    ark.decBkgProb.SetBaseDecMap(ark.baseEvents);

    I3Analysis * psData = new I3Analysis();
    psData->SetBkgSpaceProb(ark.decBkgProb);
    psData->SetBaseEvents(ark.baseEvents);

    ark.psData = psData;

    cout << "----- " << ark.GetName() << " Loaded -----\n";
}
