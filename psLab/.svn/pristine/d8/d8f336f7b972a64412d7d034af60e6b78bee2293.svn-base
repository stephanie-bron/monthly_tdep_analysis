 TString LOADTREE_IC40_CUTA5_V3_DIR = "/net/user/jdumm/std-processing/releases/V03-02-00/release64/CutA5_v3/";
//TString LOADTREE_IC40_CUTA5_V3_DIR = "/home/cfinley/data/ic40ps/";



// Recommended signal dataset for analysis (L2b):
// [10k E^-1 files, 5000 events/file]
// 10x the statistics of original unblinding sample
TTree* LoadTree_IC40_CutA5_nugen_numu_10k_small() {

  TString file1 = LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_numu_2075_01000_small.root";
  TString file2 = LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_numu_2082_01000_small.root";
  TString file3 = LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_numu_3311_08000_small.root";
  TChain *tree = new TChain("Level2");
  tree->Add(file1);
  tree->Add(file2);
  tree->Add(file3);
  tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN


  int nFiles = 10000; 
  int generatedEventsPerFile = 5000; // NuMu + NuMuBar per file
  int mcTotalGeneratedEvents = nFiles * generatedEventsPerFile;


  // SET HANDLES:
  // These aliases provide consistent handles across different 
  // types root files (analysis-tree, flat-ntuple, simple-extractor, small-tree),
  // so set accordingly:

  tree->SetAlias("mcPrimary_Zenith_rad",  "mcZr");
  tree->SetAlias("mcPrimary_Azimuth_rad", "mcAr");
  tree->SetAlias("mcPrimary_Energy_GeV",  "mcEn");
  tree->SetAlias("mcOneWeight",           "OW");
  tree->SetAlias("mueEn",                 "mmueEn");
  tree->SetAlias("NChan",                 "NCh");

  tree->SetAlias("z",                     "cos(mZd*TMath::DegToRad())");

  tree->SetAlias("BartolFluxWeight",      "BartolFluxWeightForOneFile");

  // SET META-INFORMATION:
  // These aliases store meta-information for the tree

  tree->SetAlias("mcTotalGeneratedEvents", TStringify(mcTotalGeneratedEvents));


  //--------------------//


  // OTHER, EXTRA ALIASES:

  tree->SetAlias("mZr","mZd*TMath::DegToRad()");
  tree->SetAlias("mAr","mAd*TMath::DegToRad()");


  return tree;
}


// [8k E^-1 files, 5000 events/file]
// 8x the statistics of original unblinding sample
TTree* LoadTree_IC40Full_CutA6v1_nugen3311_small() {

  //char *files = "/home/michael/IceCube/data/CutA6_v1_nugen_numu_3311_08000_small.root";
  char *files = "/net/user/jdumm/std-processing/releases/V03-02-00/release64/CutA6_v1/CutA6_v1_nugen_numu_3311_08000_small.root";
//  char *files = "/home/michael/Desktop/CutA6_v1_nugen_numu_2075_01000_small.root";
  TChain *tree = new TChain("Level2");
  tree->Add(files);
  tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN


  int nFiles = 8000; // Only 869 files right now
  int generatedEventsPerFile = 5000; // NuMu + NuMuBar per file
  int mcTotalGeneratedEvents = nFiles * generatedEventsPerFile;


  // SET HANDLES:
  // These aliases provide consistent handles across different 
  // types root files (analysis-tree, flat-ntuple, simple-extractor),
  // so set accordingly:

  tree->SetAlias("mcPrimary_Zenith_rad",  "mcZr");
  tree->SetAlias("mcPrimary_Azimuth_rad", "mcAr");
  tree->SetAlias("mcPrimary_Energy_GeV",  "mcEn");
  tree->SetAlias("mcOneWeight",           "OW");
  tree->SetAlias("mueEn",                 "mmueEn");
  tree->SetAlias("NChan",                 "NCh");

  tree->SetAlias("z",                     "cos(mZd*TMath::DegToRad())");

  tree->SetAlias("BartolFluxWeight",      "BartolFluxWeightForOneFile");

  // SET META-INFORMATION:
  // These aliases store meta-information for the tree

  tree->SetAlias("mcTotalGeneratedEvents", TStringify(mcTotalGeneratedEvents));


  //--------------------//


  // OTHER, EXTRA ALIASES:

  tree->SetAlias("s32Zr","s32Zd*TMath::DegToRad()");
  tree->SetAlias("s32Ar","s32Ad*TMath::DegToRad()");
  tree->SetAlias("mZr","mZd*TMath::DegToRad()");
  tree->SetAlias("mAr","mAd*TMath::DegToRad()");


  return tree;
}


// Original signal dataset for analysis (L2b) [1000 E^-1 files, 5000 events/file]
// Now 10x more statistics available!!!
TTree* LoadTree_IC40_CutA5_nugen_numu_2075_small() {

  TString files = LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_numu_2075_01000_small.root";
  TChain *tree = new TChain("Level2");
  tree->Add(files);
  tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN


  int nFiles = 1000; 
  int generatedEventsPerFile = 5000; // NuMu + NuMuBar per file
  int mcTotalGeneratedEvents = nFiles * generatedEventsPerFile;


  // SET HANDLES:
  // These aliases provide consistent handles across different 
  // types root files (analysis-tree, flat-ntuple, simple-extractor, small-tree),
  // so set accordingly:

  tree->SetAlias("mcPrimary_Zenith_rad",  "mcZr");
  tree->SetAlias("mcPrimary_Azimuth_rad", "mcAr");
  tree->SetAlias("mcPrimary_Energy_GeV",  "mcEn");
  tree->SetAlias("mcOneWeight",           "OW");
  tree->SetAlias("mueEn",                 "mmueEn");
  tree->SetAlias("NChan",                 "NCh");

  tree->SetAlias("z",                     "cos(mZd*TMath::DegToRad())");

  tree->SetAlias("BartolFluxWeight",      "BartolFluxWeightForOneFile");

  // SET META-INFORMATION:
  // These aliases store meta-information for the tree

  tree->SetAlias("mcTotalGeneratedEvents", TStringify(mcTotalGeneratedEvents));


  //--------------------//


  // OTHER, EXTRA ALIASES:

  tree->SetAlias("mZr","mZd*TMath::DegToRad()");
  tree->SetAlias("mAr","mAd*TMath::DegToRad()");


  return tree;
}




// For testing (L2b) [5000 E^-2 files, 200000 events/file]
TTree* LoadTree_IC40_CutA5_nugen_numu_2326_small() {

  TString files = LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_numu_2326_05000_small.root";
  TChain *tree = new TChain("Level2");
  tree->Add(files);
  tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN


  int nFiles = 5000; 
  int generatedEventsPerFile = 200000; // NuMu + NuMuBar per file
  int mcTotalGeneratedEvents = nFiles * generatedEventsPerFile;


  // SET HANDLES:
  // These aliases provide consistent handles across different 
  // types root files (analysis-tree, flat-ntuple, simple-extractor, small-tree),
  // so set accordingly:

  tree->SetAlias("mcPrimary_Zenith_rad",  "mcZr");
  tree->SetAlias("mcPrimary_Azimuth_rad", "mcAr");
  tree->SetAlias("mcPrimary_Energy_GeV",  "mcEn");
  tree->SetAlias("mcOneWeight",           "OW");
  tree->SetAlias("mueEn",                 "mmueEn");
  tree->SetAlias("NChan",                 "NCh");

  tree->SetAlias("z",                     "cos(mZd*TMath::DegToRad())");

  tree->SetAlias("BartolFluxWeight",      "BartolFluxWeightForOneFile");

  // SET META-INFORMATION:
  // These aliases store meta-information for the tree

  tree->SetAlias("mcTotalGeneratedEvents", TStringify(mcTotalGeneratedEvents));


  //--------------------//


  // OTHER, EXTRA ALIASES:

  tree->SetAlias("mZr","mZd*TMath::DegToRad()");
  tree->SetAlias("mAr","mAd*TMath::DegToRad()");


  return tree;
}

//BugFixed (pulses) data, final sample

TTree* LoadTree_IC40Full_CutA6v1_GoodRuns_small() {

   char *filespec10 = "/net/user/jdumm/std-processing/releases/V03-02-00/release64/CutA6_v1/CutA6_v1_Full_GoodRuns_small.root";
  TChain *tree = new TChain("Level2");
  tree->Add(filespec10);
  tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN

  double livetimeTotal = 375.539 * 86400.; // seconds

  // SET META-INFORMATION:
  // These aliases store meta-information for the tree

  tree->SetAlias("livetimeTotal", TStringify(livetimeTotal));

  //--------------------//

  // OTHER, EXTRA ALIASES:
  tree->SetAlias("timeMJD","MJDay+(MJSec+MJNanoSec*1e-9)/86400.");

  tree->SetAlias("NChan","NCh");
  tree->SetAlias("mueEn","mmueEn");
  tree->SetAlias("s32Zr","s32Zd*TMath::DegToRad()");
  tree->SetAlias("s32Ar","s32Ad*TMath::DegToRad()");
  tree->SetAlias("mZr","mZd*TMath::DegToRad()");
  tree->SetAlias("mAr","mAd*TMath::DegToRad()");

  tree->SetAlias("z","cos(mZd*TMath::DegToRad())");

  return tree;
}

// Full IC40 dataset, L2 reprocessed
TTree* LoadTree_IC40_CutA5_data_Full_GoodRuns_small() {

   TString filespec10 = LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_Full_GoodRuns_small.root";
  TChain *tree = new TChain("Level2");
  tree->Add(filespec10);
  tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN

  double livetimeTotal = 375.539 * 86400.; // seconds

  // SET META-INFORMATION:
  // These aliases store meta-information for the tree

  tree->SetAlias("livetimeTotal", TStringify(livetimeTotal));

  //--------------------//

  // OTHER, EXTRA ALIASES:
  tree->SetAlias("timeMJD","MJDay+(MJSec+MJNanoSec*1e-9)/86400.");

  tree->SetAlias("NChan","NCh");
  tree->SetAlias("mueEn","mmueEn");
  tree->SetAlias("mZr","mZd*TMath::DegToRad()");
  tree->SetAlias("mAr","mAd*TMath::DegToRad()");

  tree->SetAlias("z","cos(mZd*TMath::DegToRad())");

  return tree;
}



// Original 1-month burn sample for IC40 dataset, L2 reprocessed
TTree* LoadTree_IC40_CutA5_data_Burn_GoodRuns_small() {

   TString filespec10 = LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_Burn_GoodRuns_small.root";
  TChain *tree = new TChain("Level2");
  tree->Add(filespec10);
  tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN

  double livetimeTotal = 29.79 * 86400.; // seconds

  // SET META-INFORMATION:
  // These aliases store meta-information for the tree

  tree->SetAlias("livetimeTotal", TStringify(livetimeTotal));

  //--------------------//

  // OTHER, EXTRA ALIASES:
  tree->SetAlias("timeMJD","MJDay+(MJSec+MJNanoSec*1e-9)/86400.");

  tree->SetAlias("NChan","NCh");
  tree->SetAlias("mueEn","mmueEn");
  tree->SetAlias("mZr","mZd*TMath::DegToRad()");
  tree->SetAlias("mAr","mAd*TMath::DegToRad()");

  tree->SetAlias("z","cos(mZd*TMath::DegToRad())");

  return tree;
}



// Original signal dataset for analysis with NuMu:NuTau = 1:1 
// Now 10x more statistics available
//  (L2b) [NuMu:  1000 E^-1 files, 5000 events/file]
//  (L2b) [NuTau: 5000 E^-1 files, 5000 events/file]
TTree* LoadTree_IC40_CutA5_numu_2075_plus_nutau_2183_small() {

 TString file1 = 
   LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_numu_2075_01000_small.root";
 TString file2 = 
   LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_nutau_2183_05000_small.root";

 TChain *tree = new TChain("Level2");
 tree->Add(file1);
 tree->Add(file2);
 tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN


 // SET DATASET SELECTORS:

 TString DataSetSelector_NuMu  = "(Type==68 || Type==69)";
 TString DataSetSelector_NuTau = "(Type==133 || Type==134)";


 // These default scale factors can be changed at a later time by the user.
 tree->SetAlias("NuMuFluxScaleFactor", "1.");
 tree->SetAlias("NuTauFluxScaleFactor","1.");


 // SET META-INFORMATION ALIAS(ES):

 int NuMu_nFiles = 1000;
 int NuMu_generatedEventsPerFile = 5000; // Nu + NuBar per file
 int NuMu_mcTotalGeneratedEvents = NuMu_nFiles * NuMu_generatedEventsPerFile;

 int NuTau_nFiles = 5000; 
 int NuTau_generatedEventsPerFile = 5000; // Nu + NuBar per file
 int NuTau_mcTotalGeneratedEvents=NuTau_nFiles * NuTau_generatedEventsPerFile;

 tree->SetAlias("mcOneWeight",
		 "("+
		 DataSetSelector_NuMu+"*(NuMuFluxScaleFactor*OW/"+
		 TStringify(NuMu_mcTotalGeneratedEvents)+
		 ")+"+
		 DataSetSelector_NuTau+"*(NuTauFluxScaleFactor*OW/"+
		 TStringify(NuTau_mcTotalGeneratedEvents)+
		 "))"
		 );

 tree->SetAlias("mcTotalGeneratedEvents","1."); // Hidden in mcOneWeight now

 // SET HANDLES:
 // These aliases provide consistent handles across different 
 // types root files (analysis-tree, flat-ntuple, simple-extractor),
 // so set accordingly:

 tree->SetAlias("mcPrimary_Zenith_rad",  "mcZr");
 tree->SetAlias("mcPrimary_Azimuth_rad", "mcAr");
 tree->SetAlias("mcPrimary_Energy_GeV",  "mcEn");


 //--------------------//

 // OTHER, EXTRA ALIASES:

 tree->SetAlias("mueEn",                 "mmueEn");
 tree->SetAlias("NChan",                 "NCh");
 tree->SetAlias("s32Zr","s32Zd*TMath::DegToRad()");
 tree->SetAlias("s32Ar","s32Ad*TMath::DegToRad()");
 tree->SetAlias("mZr","mZd*TMath::DegToRad()");
 tree->SetAlias("mAr","mAd*TMath::DegToRad()");
 //  tree->SetAlias("z",                     "cos(mZd*TMath::DegToRad())");
 //  tree->SetAlias("BartolFluxWeight",      "BartolFluxWeightForOneFile");

 return tree;
}

// Recommended signal dataset for analysis with NuMu:NuTau = 1:1 
//  (L2b) [NuMu:  10000 E^-1 files, 5000 events/file]
//  (L2b) [NuTau: 5000  E^-1 files, 5000 events/file]
TTree* LoadTree_IC40_CutA5_numu_10k_plus_nutau_2183_small() {

 TString numuFile1 = 
   LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_numu_2075_01000_small.root";
 TString numuFile2 = 
   LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_numu_2082_01000_small.root";
 TString numuFile3 = 
   LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_numu_3311_08000_small.root";
 TString nutauFile = 
   LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_nugen_nutau_2183_05000_small.root";

 TChain *tree = new TChain("Level2");
 tree->Add(numuFile1);
 tree->Add(numuFile2);
 tree->Add(numuFile3);
 tree->Add(nutauFile);
 tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN


 // SET DATASET SELECTORS:

 TString DataSetSelector_NuMu  = "(Type==68 || Type==69)";
 TString DataSetSelector_NuTau = "(Type==133 || Type==134)";


 // These default scale factors can be changed at a later time by the user.
 tree->SetAlias("NuMuFluxScaleFactor", "1.");
 tree->SetAlias("NuTauFluxScaleFactor","1.");


 // SET META-INFORMATION ALIAS(ES):

 int NuMu_nFiles = 10000;
 int NuMu_generatedEventsPerFile = 5000; // Nu + NuBar per file
 int NuMu_mcTotalGeneratedEvents = NuMu_nFiles * NuMu_generatedEventsPerFile;

 int NuTau_nFiles = 5000; 
 int NuTau_generatedEventsPerFile = 5000; // Nu + NuBar per file
 int NuTau_mcTotalGeneratedEvents=NuTau_nFiles * NuTau_generatedEventsPerFile;

 tree->SetAlias("mcOneWeight",
		 "("+
		 DataSetSelector_NuMu+"*(NuMuFluxScaleFactor*OW/"+
		 TStringify(NuMu_mcTotalGeneratedEvents)+
		 ")+"+
		 DataSetSelector_NuTau+"*(NuTauFluxScaleFactor*OW/"+
		 TStringify(NuTau_mcTotalGeneratedEvents)+
		 "))"
		 );

 tree->SetAlias("mcTotalGeneratedEvents","1."); // Hidden in mcOneWeight now

 // SET HANDLES:
 // These aliases provide consistent handles across different 
 // types root files (analysis-tree, flat-ntuple, simple-extractor),
 // so set accordingly:

 tree->SetAlias("mcPrimary_Zenith_rad",  "mcZr");
 tree->SetAlias("mcPrimary_Azimuth_rad", "mcAr");
 tree->SetAlias("mcPrimary_Energy_GeV",  "mcEn");


 //--------------------//

 // OTHER, EXTRA ALIASES:

 tree->SetAlias("mueEn",                 "mmueEn");
 tree->SetAlias("NChan",                 "NCh");
 tree->SetAlias("s32Zr","s32Zd*TMath::DegToRad()");
 tree->SetAlias("s32Ar","s32Ad*TMath::DegToRad()");
 tree->SetAlias("mZr","mZd*TMath::DegToRad()");
 tree->SetAlias("mAr","mAd*TMath::DegToRad()");
 //  tree->SetAlias("z",                     "cos(mZd*TMath::DegToRad())");
 //  tree->SetAlias("BartolFluxWeight",      "BartolFluxWeightForOneFile");

 return tree;
}




/*

// Same time period as IC40 6-month dataset, but L2 reprocessed
TTree* LoadTree_IC40_CutA5_data_6months_GoodRuns_small() {

   TString filespec10 = LOADTREE_IC40_CUTA5_V3_DIR+"/CutA5_v3_6months_GoodRuns_small.root";
  TChain *tree = new TChain("Level2");
  tree->Add(filespec10);
  tree->GetEntries();  // REQUIRED TO "INITIALIZE" CHAIN

  double livetimeTotal = 175.55 * 86400.; // seconds

  // SET META-INFORMATION:
  // These aliases store meta-information for the tree

  tree->SetAlias("livetimeTotal", TStringify(livetimeTotal));

  //--------------------//

  // OTHER, EXTRA ALIASES:
  tree->SetAlias("timeMJD","MJDay+(MJSec+MJNanoSec*1e-9)/86400.");

  tree->SetAlias("NChan","NCh");
  tree->SetAlias("mueEn","mmueEn");
  tree->SetAlias("mZr","mZd*TMath::DegToRad()");
  tree->SetAlias("mAr","mAd*TMath::DegToRad()");

  tree->SetAlias("z","cos(mZd*TMath::DegToRad())");

  return tree;
}

*/
