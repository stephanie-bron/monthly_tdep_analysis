
{

  // Do whatever you need to for setting up the point source

  gROOT->ProcessLine(".x macro_SetDisco.C(5)");
  gROOT->ProcessLine(".L macro_SetPointSource.C");
  gROOT->ProcessLine(".L macro_DetectionStudy.C");

  double logEMin = 3.0;
  double logEMax = 8.0;
  int nSteps = 20;

  double decDeg = 5.;
  TString fluxString = "pow(x,-2)";
  macro_SetPointSource(0, decDeg, fluxString);


  TH1D hEvents("hEvents","Events",nSteps, logEMin, logEMax);
  vector<I3Event>* vp = 
    (dynamic_cast<I3PointGenerator*>(psData.GetSource()))->GetCandidateEvents();
  for (int i=0; i<vp.size(); ++i) {
    double mcEn = ((*vp)[i]).GetMCParams().mcEnergy;
    double weight = ((*vp)[i]).GetMCParams().srcWeight;
    hEvents.Fill(log10(mcEn),weight);
  }
  hEvents.Scale(1./hEvents.GetSum());

  TH2D hFrame("hFrame","",1,logEMin,logEMax,1,0,1);

  TCanvas *can = new TCanvas("can","can",20,20,1200,450);
  can->Divide(3,1,0.005,0.005);
  can->cd(1);
  hFrame.Draw();
  AscendingCumulate(&hEvents)->Draw("Lsame");
  gPad->SetGrid();
  can->cd(2);
  hFrame.Draw();
  gPad->SetGrid();
  can->cd(3);
  hFrame.Draw();
  gPad->SetGrid();
  can->Update();

  macro_DetectionStudy();
  double mainFlux = 
    psData.GetSource()->GetFluxScaleForNev(disco.MeanSrcEv_ForDetection_);
  cout << mainFlux << endl;

  TGraph gMinFrac(nSteps);
  TGraph gMaxFrac(nSteps);

  for (int i=0; i<nSteps; ++i) {
    double logE = logEMin+i*(logEMax-logEMin)/nSteps;


    TString limitString = "(x<"+TStringify(pow(10,logE))+")";
    cout << limitString << endl;
    macro_SetPointSource(0, decDeg, fluxString+"*"+limitString);
    double w = psData.GetSource()->GetMeanSrcNev();
    double partFlux = 0.;
    // if there are no events, don't try to do detection study
    if (w > 0) {
      macro_DetectionStudy();
      partFlux = 
	psData.GetSource()->GetFluxScaleForNev(disco.MeanSrcEv_ForDetection_);
    }
    gMaxFrac.SetPoint(i,logE,mainFlux/partFlux);

    // this loop is for pretty real-time plotting only:
    // hide all remaining points under current one:
    for (int j=i+1; j<nSteps; ++j) {
      gMaxFrac.SetPoint(j,logE,mainFlux/partFlux);
    }
    can->cd(2);
    gMaxFrac->Draw("LP");
    can->Update();
    

    TString limitString = "(x>"+TStringify(pow(10,logE))+")";
    cout << limitString << endl;
    macro_SetPointSource(0, decDeg, fluxString+"*"+limitString);
    double w = psData.GetSource()->GetMeanSrcNev();
    double partFlux = 0.;
    // if there are no events, don't try to do detection study
    if (w > 0) {
      macro_DetectionStudy();
      partFlux = 
	psData.GetSource()->GetFluxScaleForNev(disco.MeanSrcEv_ForDetection_);
    }
    gMinFrac.SetPoint(i,logE,mainFlux/partFlux);

    // this loop is for pretty real-time plotting only:
    // hide all remaining points under current one:
    for (int j=i+1; j<nSteps; ++j) {
      gMinFrac.SetPoint(j,logE,mainFlux/partFlux);
    }
    can->cd(3);
    gMinFrac->Draw("LP");
    can->Update();
  }

}
