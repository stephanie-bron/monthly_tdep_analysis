
{

  //  gStyle->SetOptTitle(0);

  TCanvas *can = new TCanvas("canDetectEvents","canDetectEvents",800,400);

  can->cd();
  can->SetRightMargin(0.075);
  can->SetLeftMargin(0.11);
  can->SetBottomMargin(0.14);
  can->SetTopMargin(0.1);

  hDetectEvents->Draw("P");
  gPad->SetGridy(1);
  hDetectEvents->SetMarkerStyle(2);
  hDetectEvents->SetMarkerSize(4);
  hDetectEvents->SetMinimum(0);
  int maxBin = hDetectEvents->GetMaximumBin();
  double max = hDetectEvents->GetBinContent(maxBin);
  hDetectEvents->SetMaximum(1.5*max );
  gPad->SetTickx(1);
  gPad->SetTicky(1);

  hDetectEvents->GetYaxis()->SetTitle("Events");

  hDetectEvents->GetYaxis()->CenterTitle(false);

  hDetectEvents->GetYaxis()->SetTitleSize(0.06);
  hDetectEvents->GetYaxis()->SetLabelSize(0.06);
  hDetectEvents->GetYaxis()->SetTitleOffset(0.6);

  hDetectEvents->GetXaxis()->SetTitleSize(0.06);
  hDetectEvents->GetXaxis()->SetLabelSize(0.05);
  hDetectEvents->GetXaxis()->CenterTitle(true);





  TCanvas *can = new TCanvas("canDetectFlux","canDetectFlux",800,400);

  can->cd();
  can->SetRightMargin(0.075);
  can->SetLeftMargin(0.11);
  can->SetBottomMargin(0.14);
  can->SetTopMargin(0.1);

  hDetectFlux->Draw("L");
  gPad->SetTickx(1);
  gPad->SetTicky(1);
  gPad->SetLogy(1);

  hDetectFlux->GetYaxis()->SetTitle("#Phi^{0} [GeV^{-1} cm^{-2} s^{-1}]");

  hDetectFlux->GetYaxis()->CenterTitle(true);

  hDetectFlux->GetYaxis()->SetTitleSize(0.06);
  hDetectFlux->GetYaxis()->SetLabelSize(0.06);
  hDetectFlux->GetYaxis()->SetTitleOffset(0.9);

  hDetectFlux->GetXaxis()->SetTitleSize(0.06);
  hDetectFlux->GetXaxis()->SetLabelSize(0.05);
  hDetectFlux->GetXaxis()->CenterTitle(true);

  int minBin = hDetectFlux->GetMinimumBin();
  double min = hDetectFlux->GetBinContent(minBin);
  hDetectFlux->SetMinimum(0.5*min);
  int maxBin = hDetectFlux->GetMaximumBin();
  double max = hDetectFlux->GetBinContent(maxBin);
  hDetectFlux->SetMaximum(2.0*max);

}
