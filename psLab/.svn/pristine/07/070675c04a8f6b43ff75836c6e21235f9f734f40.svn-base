{

  bool RELOAD;

  if (!RELOAD) {
    RELOAD = true;
    gROOT->Macro("$LAB_MAIN_DIR/llhTimeDep/loadlibs.C");
    if (!LOADSUCCESS) { return 0.; } // stop, and signal that script failed.

  //  TString macroPath = gROOT->GetMacroPath();
  //  macroPath += gSystem->ExpandPathName("$LAB_MAIN_DIR/macro_llh:");
  //  gROOT->SetMacroPath(macroPath);


    if (1) { initialize_ran1(-55); } // seed has to be a *NEGATIVE* integer
    else   { initialize_ran1(); }  // or, no seed = initialize to ran clock time
    int ranSeed = get_ran1_seed(); // if you want to know what the seed was

    gROOT->ProcessLine(".L Ark.C");

    bool OPT_USEREALDATA = false;

//    I3Ark ark22;
//    gROOT->ProcessLine(".x load_ark_ic22.C(ark22, OPT_USEREALDATA)");

    //I3Ark ark40;
    //gROOT->ProcessLine(".x load_ark_ic40.C(ark59, OPT_USEREALDATA)");

    I3Ark ark59;
    //gROOT->ProcessLine(".x load_ark_ic59_noIT.C(ark59, OPT_USEREALDATA)");
    gROOT->ProcessLine(".x load_ark_ic59_IT2.C(ark59, OPT_USEREALDATA)");
    //gROOT->ProcessLine(".x load_ark_ic40.C(ark59, OPT_USEREALDATA)");

  // Source

  //gROOT->ProcessLine(".L AllSky.C");
  //AllSky as;
  //as.SetRange(148, 158, 5, 15);

    /*NewLlhEnergy newllh59;
    newllh59.SetUseEnergy(true);
    newllh59.SetOptimizeAngleDeg(10.);
    newllh59.SetOptimizeTolerance(0.01);
    newllh59.SetMonitorLevel(0);
    newllh59.SetAnalysisSet(ark59.psData); //*/

    NewLlhBlockTime newllh59;
    newllh59.SetUseEnergy(true);
    //newllh59.SetOptimizeAngleDeg(10.);
    newllh59.SetOptimizeTolerance(0.01);
    newllh59.SetMonitorLevel(0);
    newllh59.SetEMaxRatioWarnOnlyOnce(1);
    newllh59.JimsTerm_ = false;
    newllh59.SpectralPenalty_ = false;
    newllh59.ndof_ = 3.;
    newllh59.laglimit_ = 0.5;
    newllh59.SetLivetime(375.);
    newllh59.SetBlocks("/net/user/mfbaker/Fermi/data/lcAll/lcAll.3C454.3cp.l1.txt",0.);
  
    gROOT->ProcessLine(".L SimpleAnalysis.C");
  
  }

  //EquatorialDeg testSearch(153.375, 11.375);
  EquatorialDeg testSearch(343.491,16.148);

  double spectralIndex = -2;

  cout << ark59.tmin << " " << ark59.tmax << endl;

  TimePdf * tPdf = new BlockTimePdf1();
  tPdf->SetBlockLevels("/net/user/mfbaker/Fermi/data/lcAll/lcAll.3C454.3cp.l1.txt");
  tPdf->SetLivetime( ark59.livetime );
  tPdf->CheckTimeBounds(ark59.tmin, ark59.tmax);
  
  ark59.SetPointSource(testSearch, PowerLawFlux(1.,spectralIndex), tPdf); 
//  ark59.psData.GetSource().SetTimeAzBins( ark59.lcBkgProb.nbAz );
  newllh59.SetTimeBounds(tPdf);
  newllh59.SetAnalysis(ark59.psData,testSearch);
  
  //vector<MinuitParDef> pdv;
  //pdv.push_back( MinuitParDef("nSrc",2,0.1, 0,100) );
  //pdv.push_back( MinuitParDef("gamma",2.5,0.5, 1., 4.) );
  //pdv.push_back( MinuitParDef("mean",2.5,0.5, 1., 4.) );
  //pdv.push_back( MinuitParDef("sigma",2.5,0.5, 1., 4.) );
  //maf.SetParDefs(pdv);

  SimpleAnalysis sa;
  sa.SetNDoF(3);
   
  //cout << "Starting trials" << endl;
  sa.Execute(ark59,newllh59,10,5);


  /*
  // Disco (Discovery Potential and Sensitivity Estimator)
  DiscoveryPotential disco;
  gROOT->ProcessLine(".L SetDisco.C");
  // parameters:  loops, optMedianUpperLimit,  significance,  power);
   SetDisco(disco, 5, false, 2.87e-7, 0.5);

  gROOT->ProcessLine(".L MultiDetectionStudy.C");
 
  TCanvas *c = MultiDetectionStudy(mark, maf, mas, disco); //*/

  /* Disco (Discovery Potential and Sensitivity Estimator)
  DiscoveryPotential disco;
  
  gROOT->ProcessLine(".L SetDisco.C");
  gROOT->ProcessLine(".L DetectionStudy.C");
  // parameters:  loops, optMedianUpperLimit,  significance,  power);
  SetDisco(disco, 10, false, 2.87e-7, 0.5);
  // SetDisco(disco, 30, true, 0.5, 0.9);
  
  double dsigmas[] = {1e-6, 1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 3e-1, 1., 3., 10, 1e2};
  double n_disco[11];
  
  for (int i=0;i<11;i++) {
  
    TimePdf * tPdf = new GaussianTimePdf(ark59.tmin, ark59.tmax, 55230.,dsigmas[i],1.);
//    TimePdf * tPdf = new GaussianTimePdf(ark59.tmin, ark59.tmax, 54880.,dsigmas[i],1.);    
    ark59.SetPointSource(testSearch, PowerLawFlux(1.,spectralIndex), tPdf); 
    newllh59.SetTimeBounds(tPdf);
    newllh59.SetAnalysis(ark59.psData,testSearch);
  
    n_disco[i] = DetectionStudy_d(ark59, newllh59, disco);
  
  }
  
  TGraph * g = new TGraph(11,dsigmas,n_disco);
  g->Draw("AL"); //*/
  
  //gROOT->ProcessLine(".L DetectionZenith.C");

  //DetectionZenith dz;
  //dz.searchDecDegMin = -85.;   //(skip any bins beyond this range);
  //dz.searchDecDegMax = +85.;   //(skip any bins beyond this range);
  //dz.nBins = 40;

  //dz.Execute(ark59, newllh59, disco, PowerLawFlux(1,spectralIndex));
  
  
//  dz.Write("IC59_SC_Zenith.root","recreate");
//  dz.Write("IC59_SCutB4_noIT_Zenith_discoEm2.root","recreate");
//  dz.Write("IC59_SCutB4_noIT_Zenith_sensEm1p5.root","recreate");
//  dz.Write("IC59_SCutB4_Zenith_sensEm1p5.root","recreate");

  //dz.Write("IC59_discovery.root","recreate");

 
  return 1; // signal correct finish of script
}
